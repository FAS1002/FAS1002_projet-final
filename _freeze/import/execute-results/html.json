{
  "hash": "c42510ddc6aac94200ad72024091f4ed",
  "result": {
    "markdown": "---\ntitle: \"Importation\"\ntitle-block-banner: true\ndescription: | \n  Cette page regroupe la première importation des données à l'état brute ainsi que les manipulation de bases.\n# à changer\ndate: \"2022-12-21\"\n# Modifier les détails que vous voulez\nauthor:\n  - name: \"Juliette Leblanc\"\n    # Votre site web perso ou github\n    url: https://github.com/JulLeblanc\n    # les champs d'affiliation sont optionnels, vous pouvez les\n    # comment out en ajoutant un # devant.\n    affiliation: FAS1002\n    affiliation-url: https://FAS1002.github.io/A22\n    # changer pour votre propre orcid id\n    # https://orcid.org/ pour vous inscrire.\n    # orcid: 0000-0000-0000-0000\n\n# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.\ncitation: true\n# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire\n# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.\nbibliography: references.bib\n---\n\n::: {.cell}\n\n:::\n\n\n### [Introduction]{.underline}\n\nLe présent projet travaille avec deux bases de données : La première est issue de Our World in Data, un site qui publie gratuitement des bases de données et de la recherche sur les enjeux contemporains que le monde traverse (économie, écologie, climat, énergie, conflits etc).\\\nLa deuxième base de donnée est issue de Gapminder, une OBNL suèdoise, qui propose en libre accès d'importantes bases de données aussi sur les enjeux actuels, dans le but de prévenir et lutter contre la mésinformation.\n\n## [**I. Importation quotidienne des données CO2 (Our World in Data)**]{.underline}\n\nLa base de donnée \"*CO2 & Greenhouse Gas Emissions*\" est utilisée. Elle permet de faire différentes explorations statistiques sur les émissions de CO2 dans 207 pays depuis le 19ème siècle.\n\n\n::: {.cell show_col_types='false' hash='import_cache/html/download co2_0bec83e6822a15fee6c1321c822e4172'}\n\n```{.r .cell-code}\n#Données CO2 d'OWID\n\nurlowid = \"https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv\"\nbasepath =  path(\"data\", \"raw\") \nfnameowid = paste(today(), \"owid-co2-data.csv\", sep = \"_\") \nfpathowid = path(basepath, fnameowid) \ndataowid = download.file(url = urlowid, destfile = fpathowid)\n\ndat_owid = read_csv(fpathowid)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 46523 Columns: 74\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): country, iso_code\ndbl (72): year, population, gdp, cement_co2, cement_co2_per_capita, co2, co2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#Automatisation du script\n\nif (!file.exists(fpathowid)) {\n    file.remove(junk)\n    download.file(url = urlowid,\n                  destfile = fpathowid)\n    paste(\"Le fichier\",\n          fpathowid,\n          \"n'existait pas, il a donc été téléchargé à l'instant.\")\n  } else {\n    print(paste(\"Le fichier\",\n                fpathowid,\n                \"existe déjà, il ne sera pas téléchargé à nouveau.\")\n) }\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Le fichier data/raw/2022-12-19_owid-co2-data.csv existe déjà, il ne sera pas téléchargé à nouveau.\"\n```\n:::\n:::\n\n\nII. Importation mensuelle des données Gapminder\n\nLa base de données \"Life Expectancy at Birth\" est utilisée. Elle permet aussi de faire des analyses statistiques sur la question de l'espérance de vie depuis le 19ème siècle. L'espérance de vie est aujourd'hui un des meilleurs indicateurs de développement d'un pays ainsi qu'une solide mesure de projection économique et démographique.Cette base de données contient au total 1505 observations\n\n\n::: {.cell hash='import_cache/html/download lifeexpectancy_8b0ad058f9eac5d83393dbe66883165d'}\n\n```{.r .cell-code}\n#Données gapminder\nlibrary(gsheet)\n\n#Utilisation de la fonction gsheet2tbl du package gsheet qui permet de convertir facilement une sheet google en dataframe\n\nurlgapminder =  gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/edit#gid=176703676\")\n\n#incorporation dans data/raw\nbasepathgm = path(\"data\", \"raw\")\n\nfnamegm = paste(today(), \"gapm.csv\", sep = \"_\")\n\nfpathgm = path(basepathgm, fnamegm)\n\nwrite_csv(x = urlgapminder, file = fpathgm)\n\ndatgm = read_csv(fpathgm)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 56616 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): geo, name\ndbl (2): time, Life expectancy\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#Automatisation du script, fréquence de téléchargement mensuelle\n\nif (!file.exists(fpathgm)) {\n    file.remove(junk)\n    download.file(url = url,\n                  destfile = fpathowid)\n    paste(\"Le fichier\",\n          fpathowid,\n          \"n'existait pas, il a donc été téléchargé à l'instant.\")\n  } else {\n    print(paste(\"Le fichier\",\n                fpathowid,\n                \"existe déjà, il ne sera pas téléchargé à nouveau.\")\n) }\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Le fichier data/raw/2022-12-19_owid-co2-data.csv existe déjà, il ne sera pas téléchargé à nouveau.\"\n```\n:::\n:::\n\n\nIII. Manipulation des données\n\nA. Données CO2\n\nLa base de données CO2 contient 46.523 observations regroupé en 74 variables. Cette base de données propose de mieux comprendre les sources d'énergies dans 207 pays.Pour obtenir une meilleure lecture et analyse des données, il est apparu plus simple de traiter la base de données CO2 avec quelques variables et non dans sa totalité. Au total, 18 sur 74 variables ont été selctionnées.\n\nPour mieux comprendre les variables, le tableau suivant propose le codebook suivant, adapté du [codebook original](https://github.com/owid/co2-data/blob/master/owid-co2-codebook.csv) .\n\n| Variable              | Description + Type                                                                                                                                                                                                                                        |\n|----------------|--------------------------------------------------------|\n| Country               | pays (character)                                                                                                                                                                                                                                          |\n| Year                  | année de l'observation (numérique)                                                                                                                                                                                                                        |\n| Iso_code              | code du pays selon la codification internationale 3166-1 (character)                                                                                                                                                                                      |\n| Population            | Nombre total de la population selon le pays (numérique)                                                                                                                                                                                                   |\n| GDP (PIB)             | Produit interieur brut mesuré en dollars (numérique)                                                                                                                                                                                                      |\n| CO2                   | Mesure annuelle de la production totale de CO2 par pays, mesuré en en millions de tonnes et excluant l'[UTCATF](https://fr.wikipedia.org/wiki/Utilisation_des_terres,_changement_d'affectation_des_terres_et_foresterie) (numérique)                      |\n| Cement_CO2_per_capita | Mesure annuelle de la production totale de CO2 générée par le ciment, par personne, en millions de tonnes (numérique)                                                                                                                                     |\n| CO2_per_gdp           | Mesure annuelle de la production totale de CO2 selon le PIB, excluant l'UTCATF (numérique)                                                                                                                                                                |\n| coal_co2              | Mesure annuelle par pays de la production de CO2 générée par le charbon, en millions de tonnes (numérique)                                                                                                                                                |\n| coal_co2_per_capita   | Mesure annuelle de la production de CO2 générée par le charbon, mesurée en million de tonnes par personnes (numérique)                                                                                                                                    |\n| methane               | Total annuel des émissions de méthane par pays, incluant l'UTCATF, mesuré en millions de tonnes (numérique)                                                                                                                                               |\n| methane_per_capita    | Total annuel des émissions de méthane par habitant, incluant l'UTCATF, mesuré en millions de tonnes (numérique)                                                                                                                                           |\n| oil_co2               | Mesure annuelle par pays de la production de CO2 générée par le pétrole, en millions de tonnes (numérique)                                                                                                                                                |\n| oil_co2_per_capita    | Mesure annuelle de la production de CO2 générée par le pétrole, mesurée en million de tonnes par personnes (numérique)                                                                                                                                    |\n| ghg_per_capita        | Total des émissions de gas à effet de serres par personne, mesuré en tonne de de millions, incluant l'UTCATF (numérique)                                                                                                                                  |\n| trade_co2             | Total annuel des émissions de C02, issu du commerce, mesuré en million de tonne. (Ici une valeur positive veut dire qu'un pays est un importeur net d'émission de CO2 ; une valeur négative veut dire qu'un pays est un exporteur net d'émission de CO2). |\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Transformation des données en tibble\n\nas.tibble(dat_owid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46,523 × 74\n   country      year iso_c…¹ popul…²   gdp cemen…³ cemen…⁴   co2 co2_g…⁵ co2_g…⁶\n   <chr>       <dbl> <chr>     <dbl> <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>\n 1 Afghanistan  1850 AFG     3752993    NA      NA      NA    NA      NA      NA\n 2 Afghanistan  1851 AFG     3769828    NA      NA      NA    NA      NA      NA\n 3 Afghanistan  1852 AFG     3787706    NA      NA      NA    NA      NA      NA\n 4 Afghanistan  1853 AFG     3806634    NA      NA      NA    NA      NA      NA\n 5 Afghanistan  1854 AFG     3825655    NA      NA      NA    NA      NA      NA\n 6 Afghanistan  1855 AFG     3844769    NA      NA      NA    NA      NA      NA\n 7 Afghanistan  1856 AFG     3863976    NA      NA      NA    NA      NA      NA\n 8 Afghanistan  1857 AFG     3883276    NA      NA      NA    NA      NA      NA\n 9 Afghanistan  1858 AFG     3902671    NA      NA      NA    NA      NA      NA\n10 Afghanistan  1859 AFG     3922160    NA      NA      NA    NA      NA      NA\n# … with 46,513 more rows, 64 more variables: co2_including_luc <dbl>,\n#   co2_including_luc_growth_abs <dbl>, co2_including_luc_growth_prct <dbl>,\n#   co2_including_luc_per_capita <dbl>, co2_including_luc_per_gdp <dbl>,\n#   co2_including_luc_per_unit_energy <dbl>, co2_per_capita <dbl>,\n#   co2_per_gdp <dbl>, co2_per_unit_energy <dbl>, coal_co2 <dbl>,\n#   coal_co2_per_capita <dbl>, consumption_co2 <dbl>,\n#   consumption_co2_per_capita <dbl>, consumption_co2_per_gdp <dbl>, …\n```\n:::\n\n```{.r .cell-code}\n#Filtrage du tibble\n\ndat_CO2 = dat_owid %>% \n\n    select(country, year, iso_code, population, gdp, co2, cement_co2_per_capita, \n\n           co2_per_gdp, coal_co2, coal_co2_per_capita, gas_co2, gas_co2_per_capita,\n\n           methane, methane_per_capita, oil_co2, oil_co2_per_capita, ghg_per_capita, trade_co2)\n```\n:::\n\n\n# Variables d'intérêts\n\n## Continent\n\nDans les deux banques de données que nous utilisons, j'ai créé une variable qui regroupe les différents pays en sous-groupe des 5 continents soit : l'Afrique, l'Amérique, l'Asie, l'Europe et l'Océanie. Ceci me permettra de faire des comparaisons plus large en me référant au continent et non au pays.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_CO2 <-  dat_CO2 %>% \n    mutate(continent = countrycode(sourcevar = dat_owid$country,\n                                   origin = \"country.name\",\n                                   destination = \"continent\"))\ndatgm <-  datgm %>%\n    mutate(continent = countrycode(sourcevar = datgm$name,\n                                   origin = \"country.name\",\n                                   destination = \"continent\"))\n```\n:::\n\n\n# Recoder certaines variables\n\nDans les banques de données que nous utilisons, des variables qui regroupent le même type d'information n'ont pas nécessairement le même nom.\n\nNotamment, dans la banque de données r par uniformiser ceci, notamment en renommant les colonnes des pays pour `country`et pour l'année `year`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatgm <- datgm |> \n    rename(country = name,\n           year = time,\n           life_exp = `Life expectancy`)\n```\n:::\n\n\n## Temps\n\nIl est également intéressant de voir le temps écoulé entre la production de se rapport et la première année que des données ont été récoltées pour chacun des pays qui se trouvent dans le jeu de données de *Life Expectancy at Birth*.\n\nCette variable prendra le nom de `time` dans la banque de données.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# df_gapminder <- df_gapminder |>\n#     mutate(time_since = as.Date(year, format = \"%Y\"))\n\n    \n    \n    \n # mutate(jour_mois = \"-01-01\") %>% #ajouter une colonne avec -MM-DD\n #     unite(time, jour_mois, col = time, sep = \"\") %>% #combiner les deux colonnes\n #     mutate(year_as_date = as.Date(time, format = \"%Y-%m-%d\")) #transformer en format de date\n #     \n # as.numeric(difftime(as.POSIXct(today()), \n #                     as.POSIXct(as.Date(min(LifeExDate$year_as_date), format = \"%Y-%m-%d\"))))\n```\n:::\n\n\n## Exporter\n\nMaintenant qu'une première manipulation des données a été fait, nous pouvons exporter celles-ci comme étant des données traitées dans le dossier `data/processed`.\n\nLes prochaines analyses auront comme point de départ les données traitées, donc qui ont été exportées dans le chemin relatif ci-dessus.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(dat_CO2,file = \"data/processed/dat_CO2.csv\")\n\nwrite_csv(datgm, file = \"data/processed/datgm.csv\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}