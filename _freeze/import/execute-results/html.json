{
  "hash": "e39a61545e79adb0b18b6ccbd4c0108f",
  "result": {
    "markdown": "---\ntitle: \"Importation\"\ntitle-block-banner: true\ndescription: | \n  Cette page regroupe la première importation des données à l'état brute ainsi que les manipulation de bases.\n# à changer\ndate: \"2022-12-21\"\n# Modifier les détails que vous voulez\nauthor:\n  - name: \" Cécile Amadoro et Juliette Leblanc\"\n    # Votre site web perso ou github\n    url: https://github.com/JulLeblanc\n    # les champs d'affiliation sont optionnels, vous pouvez les\n    # comment out en ajoutant un # devant.\n    affiliation: FAS1002\n    affiliation-url: https://FAS1002.github.io/A22\n    # changer pour votre propre orcid id\n    # https://orcid.org/ pour vous inscrire.\n    # orcid: 0000-0000-0000-0000\n\n# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.\ncitation: true\n# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire\n# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.\nbibliography: references.bib\n---\n\n::: {.cell}\n\n:::\n\n\n# Introduction\n\nLe présent projet travaille avec deux bases de données : La première est issue de Our World in Data, un site qui publie gratuitement des bases de données et de la recherche sur les enjeux contemporains que le monde traverse (économie, écologie, climat, énergie, conflits etc).\\\nLa deuxième base de donnée est issue de Gapminder, une OBNL suèdoise, qui propose en libre accès d'importantes bases de données aussi sur les enjeux actuels, dans le but de prévenir et lutter contre la mésinformation.\n\n# Importation quotidienne\n\n## Jeu de données CO2 *Our World in Data*\n\nLa base de donnée *CO2 & Greenhouse Gas Emissions* est utilisée. Elle permet de faire différentes explorations statistiques sur les émissions de CO2 dans 207 pays depuis le 19ème siècle.\n\nOn peut retrouver les données [ici](https://ourworldindata.org/co2-emissions) ainsi que le projet associé à celles-ci.\n\n\n\n::: {.cell show_col_types='false' hash='import_cache/html/download co2_c85dcb39b75c6a0ea1f302322b18360e'}\n\n```{.r .cell-code}\n#Données CO2 d'OWID\n\nurlowid = \"https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv\"\nbasepath =  path(\"data\", \"raw\") \nfnameowid = paste(today(), \"owid-co2-data.csv\", sep = \"_\") \nfpathowid = path(basepath, fnameowid) \ndataowid = download.file(url = urlowid, destfile = fpathowid)\n\ndat_owid = read_csv(fpathowid, show_col_types = FALSE)\n\n#Automatisation du script, fréquence de téléchargement quotidienne\n\ndailydowload <- function(fnameowid) { if (!file.exists(fpathowid)) {\n    file.remove(junk)\n    download.file(url = urlowid,\n                  destfile = fpathowid)\n    paste(\"Le fichier\",\n          fpathowid,\n          \"n'existait pas, il a donc été téléchargé à l'instant.\")\n} else {\n    print(paste(\"Le fichier\",\n                fpathowid,\n                \"existe déjà, il ne sera pas téléchargé à nouveau.\")\n    ) }\n    \n}\n```\n:::\n\n\n## Jeu de données *Gapminder*\n\nLa base de données _Life Expectancy at Birth_ est utilisée. Elle permet aussi de faire des analyses statistiques sur la question de l'espérance de vie depuis le 19ème siècle. L'espérance de vie est aujourd'hui un des meilleurs indicateurs de développement d'un pays ainsi qu'une solide mesure de projection économique et démographique. Cette base de données contient au total 1505 observations\n\nOn peut retrouver les données [ici](https://www.gapminder.org/data/) ainsi que le projet associé à celles-ci.\n\n\n::: {.cell hash='import_cache/html/download lifeexpectancy_bbf3c07968d095d36cc54e86f42f0afe'}\n\n```{.r .cell-code}\n#Données gapminder\nlibrary(gsheet)\n\n#Utilisation de la fonction gsheet2tbl du package gsheet qui permet de convertir facilement une sheet google en dataframe\n\nurlgapminder =  gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/edit#gid=176703676\")\n\n#incorporation dans data/raw\nbasepathgm = path(\"data\", \"raw\")\n\nfnamegm = paste(today(), \"gapm.csv\", sep = \"_\")\n\nfpathgm = path(basepathgm, fnamegm)\n\nwrite_csv(x = urlgapminder, file = fpathgm)\n\ndatgm = read_csv(fpathgm, show_col_types = FALSE)\n\n#Automatisation du script, fréquence de téléchargement mensuelle\n\nx = today()\n\nmonthlydowload <- function(fnamegm) { \n    if (!file.exists(fpathgm)) {\n        file.remove(junk)\n        download.file(url = urlgapminder,\n                      destfile = fpathgm)\n        paste(\"Le fichier\",\n              fpathgm,\n              \"n'existait pas, il a donc été téléchargé à l'instant.\")\n    }\n    else if (!month(x)) {\n        file.remove(junk)\n        download.file(url = urlgapminder,\n                      destfile = fpathgm)\n        paste(\"Le fichier\", \n              fpathgm,\n              \"n'existait pas il a donc été téléchargé à l'instant\")\n    }\n    \n    \n    else {\n        print(paste(\"Le fichier\",\n                    fpathowid,\n                    \"existe déjà, il ne sera pas téléchargé à nouveau.\")\n        ) }\n    \n}   \n```\n:::\n\n\n# Manipulation des données\n\n## Données CO2\n\nLa base de données CO2 contient 46.523 observations regroupé en 74 variables. Cette base de données propose de mieux comprendre les sources d'énergies dans 207 pays.Pour obtenir une meilleure lecture et analyse des données, il est apparu plus simple de traiter la base de données CO2 avec quelques variables et non dans sa totalité. Au total, 18 sur 74 variables ont été sélectionnées.\n\nLa description de chacune de celles-ci sera expliqué dans le document exploration.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Transformation des données en tibble\n\nas.tibble(dat_owid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46,523 × 74\n   country      year iso_c…¹ popul…²   gdp cemen…³ cemen…⁴   co2 co2_g…⁵ co2_g…⁶\n   <chr>       <dbl> <chr>     <dbl> <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>\n 1 Afghanistan  1850 AFG     3752993    NA      NA      NA    NA      NA      NA\n 2 Afghanistan  1851 AFG     3769828    NA      NA      NA    NA      NA      NA\n 3 Afghanistan  1852 AFG     3787706    NA      NA      NA    NA      NA      NA\n 4 Afghanistan  1853 AFG     3806634    NA      NA      NA    NA      NA      NA\n 5 Afghanistan  1854 AFG     3825655    NA      NA      NA    NA      NA      NA\n 6 Afghanistan  1855 AFG     3844769    NA      NA      NA    NA      NA      NA\n 7 Afghanistan  1856 AFG     3863976    NA      NA      NA    NA      NA      NA\n 8 Afghanistan  1857 AFG     3883276    NA      NA      NA    NA      NA      NA\n 9 Afghanistan  1858 AFG     3902671    NA      NA      NA    NA      NA      NA\n10 Afghanistan  1859 AFG     3922160    NA      NA      NA    NA      NA      NA\n# … with 46,513 more rows, 64 more variables: co2_including_luc <dbl>,\n#   co2_including_luc_growth_abs <dbl>, co2_including_luc_growth_prct <dbl>,\n#   co2_including_luc_per_capita <dbl>, co2_including_luc_per_gdp <dbl>,\n#   co2_including_luc_per_unit_energy <dbl>, co2_per_capita <dbl>,\n#   co2_per_gdp <dbl>, co2_per_unit_energy <dbl>, coal_co2 <dbl>,\n#   coal_co2_per_capita <dbl>, consumption_co2 <dbl>,\n#   consumption_co2_per_capita <dbl>, consumption_co2_per_gdp <dbl>, …\n```\n:::\n\n```{.r .cell-code}\n#Filtrage du tibble\n\ndat_CO2 <-  dat_owid %>% \n\n    select(country, year, iso_code, population, gdp, co2, cement_co2_per_capita, \n\n           co2_per_gdp, coal_co2, coal_co2_per_capita, gas_co2, gas_co2_per_capita,\n\n           methane, methane_per_capita, oil_co2, oil_co2_per_capita, ghg_per_capita, trade_co2)\n```\n:::\n\n\n## Classement par continent\n\nDans les deux banques de données que nous utilisons, j'ai créé une variable qui regroupe les différents pays en sous-groupe des 5 continents soit : l'Afrique, l'Amérique, l'Asie, l'Europe et l'Océanie. Ceci me permettra de faire des comparaisons plus large en me référant au continent et non au pays.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_CO2 <-  dat_CO2 %>% \n    mutate(continent = countrycode(sourcevar = dat_owid$country,\n                                   origin = \"country.name\",\n                                   destination = \"continent\"))\ndatgm <-  datgm %>%\n    mutate(continent = countrycode(sourcevar = datgm$name,\n                                   origin = \"country.name\",\n                                   destination = \"continent\"))\n```\n:::\n\n\n## Temps écoulé\n\nIl est également intéressant de voir le temps écoulé entre la production de se rapport et la première année que des données ont été récoltées pour chacun des pays qui se trouvent dans le jeu de données de *Life Expectancy at Birth*.\n\nCette variable prendra le nom de `time` dans la banque de données.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# datgm <- datgm |> \n#     mutate(time_since = time) \n# \n# \n# as.Date, format = \"%Y\")\n# \n# \n# \n#  as.numeric(difftime(as.POSIXct(today()),\n#                      as.POSIXct(as.Date(min(LifeExDate$time_since), format = \"%Y-%m-%d\"))))\n```\n:::\n\n\n# Recoder certaines variables\n\nDans les banques de données que nous utilisons, des variables qui regroupent le même type d'information n'ont pas nécessairement le même nom.\n\nNotamment, dans la banque de données r par uniformiser ceci, notamment en renommant les colonnes des pays pour `country`et pour l'année `year`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatgm <- datgm |> \n    rename(country = name,\n           year = time,\n           life_exp = `Life expectancy`)\n```\n:::\n\n\n# Joindre les banques de données\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatultimate = inner_join(dat_CO2, datgm)\n```\n:::\n\n\n# Exporter\n\nMaintenant qu'une première manipulation des données a été fait, nous pouvons exporter celles-ci comme étant des données traitées dans le dossier `data/processed`.\n\nLes prochaines analyses auront comme point de départ les données traitées, donc qui ont été exportées dans le chemin relatif ci-dessus.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(dat_CO2,file = \"data/processed/dat_CO2.csv\")\n\nwrite_csv(datgm, file = \"data/processed/datgm.csv\")\n\nwrite_csv(datultimate, file = \"data/processed/datultimate.csv\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}